{/* This is the offline slide template. It defines how presentations are formatted. */}

{{define "root"}}
<!DOCTYPE html>
<html manifest="/cache?q=ulocD&SID={{.SID}}" lang="en-US" class="no-js"> 
  <head>
    <title>{{.Title}} - OFFLINE</title>
	<meta name="description" content="{{.Subtitle}}" />
	<meta name="keywords" content="{{.Title}} - {{.Subtitle}}"/>
	<link rel="shortcut icon" href="/img/favicon.ico"/>
	<!--meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1" /-->
    <meta charset='utf-8'>
	<style>
		/* Framework */

		html {
		  height: 100%;
		}

		body {
		  margin: 0;
		  padding: 0;

		  display: block !important;

		  height: 100%;
		  min-height: 740px;

		  overflow-x: hidden;
		  overflow-y: auto;

		  background: {{.ColorTo}};
		  background: -o-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));
		  background: -moz-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));
		  background: -webkit-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));
		  background: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 500, from({{.ColorFrom}}), to({{.ColorTo}}));

		  -webkit-font-smoothing: antialiased;
		}

		.slides {
		  width: 100%;
		  height: 100%;
		  left: 0;
		  top: 0;

		  position: absolute;

		  -webkit-transform: translate3d(0, 0, 0);
		}

		.slides > article {
		  display: block;

		  position: absolute;
		  overflow: hidden;

		  width: 900px;
		  height: 700px;

		  left: 50%;
		  top: 50%;

		  margin-left: -450px;
		  margin-top: -350px;

		  padding: 40px 60px;

		  box-sizing: border-box;
		  -o-box-sizing: border-box;
		  -moz-box-sizing: border-box;
		  -webkit-box-sizing: border-box;

		  border-radius: 10px;
		  -o-border-radius: 10px;
		  -moz-border-radius: 10px;
		  -webkit-border-radius: 10px;

		  background-color: {{.SlideColor}};

		  border: 1px solid rgba(0, 0, 0, .3);

		  transition: transform .3s ease-out;
		  -o-transition: -o-transform .3s ease-out;
		  -moz-transition: -moz-transform .3s ease-out;
		  -webkit-transition: -webkit-transform .3s ease-out;
		}
		.slides.layout-widescreen > article {
		  margin-left: -550px;
		  width: 1100px;
		}
		.slides.layout-faux-widescreen > article {
		  margin-left: -550px;
		  width: 1100px;

		  padding: 40px 160px;
		}

		.slides.layout-widescreen > article:not(.nobackground):not(.biglogo),
		.slides.layout-faux-widescreen > article:not(.nobackground):not(.biglogo) {
		  background-position-x: 0, 840px;
		}

		/* Clickable/tappable areas */

		.slide-area {
		  z-index: 1000;

		  position: absolute;
		  left: 0;
		  top: 0;
		  width: 150px;
		  height: 700px;

		  left: 50%;
		  top: 50%;

		  cursor: pointer;
		  margin-top: -350px;

		  tap-highlight-color: transparent;
		  -o-tap-highlight-color: transparent;
		  -moz-tap-highlight-color: transparent;
		  -webkit-tap-highlight-color: transparent;
		}
		#prev-slide-area {
		  margin-left: -550px;
		}
		#next-slide-area {
		  margin-left: 400px;
		}
		.slides.layout-widescreen #prev-slide-area,
		.slides.layout-faux-widescreen #prev-slide-area {
		  margin-left: -650px;
		}
		.slides.layout-widescreen #next-slide-area,
		.slides.layout-faux-widescreen #next-slide-area {
		  margin-left: 500px;
		}

		/* Slides */

		.slides > article {
		  display: none;
		}
		.slides > article.far-past {
		  display: block;
		  transform: translate(-2040px);
		  -o-transform: translate(-2040px);
		  -moz-transform: translate(-2040px);
		  -webkit-transform: translate3d(-2040px, 0, 0);
		}
		.slides > article.past {
		  display: block;
		  transform: translate(-1020px);
		  -o-transform: translate(-1020px);
		  -moz-transform: translate(-1020px);
		  -webkit-transform: translate3d(-1020px, 0, 0);
		}
		.slides > article.current {
		  display: block;
		  transform: translate(0);
		  -o-transform: translate(0);
		  -moz-transform: translate(0);
		  -webkit-transform: translate3d(0, 0, 0);
		}
		.slides > article.next {
		  display: block;
		  transform: translate(1020px);
		  -o-transform: translate(1020px);
		  -moz-transform: translate(1020px);
		  -webkit-transform: translate3d(1020px, 0, 0);
		}
		.slides > article.far-next {
		  display: block;
		  transform: translate(2040px);
		  -o-transform: translate(2040px);
		  -moz-transform: translate(2040px);
		  -webkit-transform: translate3d(2040px, 0, 0);
		}

		.slides.layout-widescreen > article.far-past,
		.slides.layout-faux-widescreen > article.far-past {
		  display: block;
		  transform: translate(-2260px);
		  -o-transform: translate(-2260px);
		  -moz-transform: translate(-2260px);
		  -webkit-transform: translate3d(-2260px, 0, 0);
		}
		.slides.layout-widescreen > article.past,
		.slides.layout-faux-widescreen > article.past {
		  display: block;
		  transform: translate(-1130px);
		  -o-transform: translate(-1130px);
		  -moz-transform: translate(-1130px);
		  -webkit-transform: translate3d(-1130px, 0, 0);
		}
		.slides.layout-widescreen > article.current,
		.slides.layout-faux-widescreen > article.current {
		  display: block;
		  transform: translate(0);
		  -o-transform: translate(0);
		  -moz-transform: translate(0);
		  -webkit-transform: translate3d(0, 0, 0);
		}
		.slides.layout-widescreen > article.next,
		.slides.layout-faux-widescreen > article.next {
		  display: block;
		  transform: translate(1130px);
		  -o-transform: translate(1130px);
		  -moz-transform: translate(1130px);
		  -webkit-transform: translate3d(1130px, 0, 0);
		}
		.slides.layout-widescreen > article.far-next,
		.slides.layout-faux-widescreen > article.far-next {
		  display: block;
		  transform: translate(2260px);
		  -o-transform: translate(2260px);
		  -moz-transform: translate(2260px);
		  -webkit-transform: translate3d(2260px, 0, 0);
		}
		
	  #help {
		display: none;
		visibility: hidden;
	  }

		/* Styles for slides */

		.slides > article {
		  font-family: 'Open Sans', Arial, sans-serif;

		  color: #FFFFFF;
		  text-shadow: 0 1px 1px rgba(0, 0, 0, .1);

		  font-size: 26px;
		  line-height: 36px;

		  letter-spacing: -1px;
		}

		b {
		  font-weight: 600;
		}

		a {
		  color: #8bc220;
		  text-decoration: none;
		}
		a:visited {
		  color: #f7fd03;
		}
		a:hover {
		  color: #f8f8f8;
		}

		p {
		  margin: 0;
		  padding: 0;

		  margin-top: 20px;
		}
		p:first-child {
		  margin-top: 0;
		}

		h1 {
		  font-size: 60px;
		  line-height: 60px;

		  padding: 0;
		  margin: 0;
		  margin-top: 200px;
		  margin-bottom: 5px;
		  padding-right: 40px;

		  font-weight: 600;

		  letter-spacing: -3px;

		  color: #FFFFFF;
		}

		h2 {
		  font-size: 45px;
		  line-height: 45px;

		  position: absolute;
		  bottom: 150px;

		  padding: 0;
		  margin: 0;
		  padding-right: 40px;

		  font-weight: 600;

		  letter-spacing: -2px;

		  color: #FFFFFF;
		}

		h3 {
		  font-size: 30px;
		  line-height: 36px;

		  padding: 0;
		  margin: 0;
		  padding-right: 40px;

		  font-weight: 600;

		  letter-spacing: -1px;

		  color: #FFFFFF;
		}

		ul {
		  margin: 0;
		  padding: 0;
		  margin-top: 20px;
		  margin-left: 1.5em;
		}
		li {
		  padding: 0;
		  margin: 0 0 .5em 0;
		}

		div.code {
		  padding: 5px 10px;
		  margin-top: 20px;
		  margin-bottom: 20px;
		  overflow: hidden;

		  background: rgb(240, 240, 240);
		  border: 1px solid rgb(224, 224, 224);
		}
		pre {
		  margin: 0;
		  padding: 0;

		  font-family: 'Droid Sans Mono', 'Courier New', monospace;
		  font-size: 18px;
		  line-height: 24px;
		  letter-spacing: -1px;

		  color: black;
		}

		code {
		  font-size: 95%;
		  font-family: 'Droid Sans Mono', 'Courier New', monospace;

		  color: #58dcd1;
		}

		article > .image {
			text-align: center;
			margin-top: 40px;
		}

		table {
		  width: 100%;
		  border-collapse: collapse;
		  margin-top: 40px;
		}
		th {
		  font-weight: 600;
		  text-align: left;
		}
		td,
		th {
		  border: 1px solid rgb(224, 224, 224);
		  padding: 5px 10px;
		  vertical-align: top;
		}

		p.link {
		  margin-left: 20px;
		}

		/* Code */
		div.code {
		  outline: 0px solid transparent;
		}
		div.playground {
		  position: relative;
		}
		div.output {
		  position: absolute;
		  left: 50%;
		  top: 50%;
		  right: 40px;
		  bottom: 40px;
		  background: #202020;
		  padding: 5px 10px;
		  z-index: 2;

		  border-radius: 10px;
		  -o-border-radius: 10px;
		  -moz-border-radius: 10px;
		  -webkit-border-radius: 10px;

		}
		div.output pre {
		  margin: 0;
		  padding: 0;
		  background: none;
		  border: none;
		  width: 100%;
		  height: 100%;
		  overflow: auto;
		}
		div.output .stdout, div.output pre {
		  color: #e6e6e6;
		}
		div.output .stderr, div.output .error {
		  color: rgb(255, 200, 200);
		}
		div.output .system, div.output .exit {
		  color: rgb(255, 230, 120)
		}
		.buttons {
		  position: relative;
		  float: right;
		  top: -60px;
		  right: 10px;
		}
		div.output .buttons {
		  position: absolute;
		  float: none;
		  top: auto;
		  right: 5px;
		  bottom: 5px;
		}

		/* Presenter details */
		.presenter {
			margin-top: 20px;
		}
		.presenter p,
		.presenter .link {
			margin: 0;
			font-size: 28px;
			line-height: 1.2em;
		}

		/* Output resize details */
		.ui-resizable-handle {
		  position: absolute;
		}
		.ui-resizable-n {
		  cursor: n-resize;
		  height: 7px;
		  width: 100%;
		  top: -5px;
		  left: 0;
		}
		.ui-resizable-w {
		  cursor: w-resize;
		  width: 7px;
		  left: -5px;
		  top: 0;
		  height: 100%;
		}
		.ui-resizable-nw {
		  cursor: nw-resize;
		  width: 9px;
		  height: 9px;
		  left: -5px;
		  top: -5px;
		}
		iframe {
		  border: none;
		}
		figcaption {
		  color: #FFFFFF;
		  text-align: center;
		  font-size: 0.75em;
		}
		#help {
		  font-family: 'Open Sans', Arial, sans-serif;
		  text-align: center;
		  color: white;
		  background: #000;
		  opacity: 0.5;
		  position: fixed;
		  bottom: 25px;
		  left: 50px;
		  right: 50px;
		  padding: 20px;

		  border-radius: 10px;
		  -o-border-radius: 10px;
		  -moz-border-radius: 10px;
		  -webkit-border-radius: 10px;
		}
		
		input[type=checkbox].css-checkbox {
									position:absolute; z-index:-1000; left:-1000px; overflow: hidden; clip: rect(0 0 0 0); height:1px; width:1px; margin:-1px; padding:0; border:0;
								}

								input[type=checkbox].css-checkbox + label.css-label {
									padding-left:37px;
									height:32px; 
									display:inline-block;
									background-repeat:no-repeat;
									background-position: 0 0;
									font-size:32px;
									cursor:pointer;

								}

								input[type=checkbox].css-checkbox:checked + label.css-label {
									background-position: 0 -32px;
								}
								label.css-label {
						background-image:url(/img/checkbox.png);
						-webkit-touch-callout: none;
						-webkit-user-select: none;
						-khtml-user-select: none;
						-moz-user-select: none;
						-ms-user-select: none;
						user-select: none;
					}
					
		input[type=radio].css-checkbox {
									position:absolute; z-index:-1000; left:-1000px; overflow: hidden; clip: rect(0 0 0 0); height:1px; width:1px; margin:-1px; padding:0; border:0;
								}

								input[type=radio].css-checkbox + label.css-label2 {
									padding-left:41px;
									height:36px; 
									display:inline-block;
									background-repeat:no-repeat;
									background-position: 0 0;
									font-size:36px;
									cursor:pointer;

								}

								input[type=radio].css-checkbox:checked + label.css-label2 {
									background-position: 0 -36px;
								}
								label.css-label2 {
						background-image:url(/img/radiobutton.png);
						-webkit-touch-callout: none;
						-webkit-user-select: none;
						-khtml-user-select: none;
						-moz-user-select: none;
						-ms-user-select: none;
						user-select: none;
					}
					
		 .css-input { padding:10px; font-size:21px; border-style:double; border-radius:7px; border-width:4px; border-color:#336699; color:#336699; text-shadow:0px 0px 0px rgba(42,42,42,.75);  } 
				 .css-input:focus { outline:none; } 

	</style>
	
	<script>
		// Copyright 2012 The Go Authors. All rights reserved.
		// Use of this source code is governed by a BSD-style
		// license that can be found in the LICENSE file.

		var PERMANENT_URL_PREFIX = '/js/';
		var SLIDE_CLASSES = ['far-past', 'past', 'current', 'next', 'far-next'];
		var PM_TOUCH_SENSITIVITY = 15;
		var curSlide;
		var xmlhttp;
		var urlParams;
		var slidesLEN;
		var notValid = false;

		/* ---------------------------------------------------------------------- */
		/* classList polyfill by Eli Grey
		 * (https://purl.eligrey.com/github/classList.js/blob/master/classList.js) */

		if (typeof document !== "undefined" && !("classList" in document.createElement("a"))) {

		(function (view) {

		var
			classListProp = "classList"
		  , protoProp = "prototype"
		  , elemCtrProto = (view.HTMLElement || view.Element)[protoProp]
		  , objCtr = Object
			strTrim = String[protoProp].trim || function () {
			return this.replace(/^\s+|\s+$/g, "");
		  }
		  , arrIndexOf = Array[protoProp].indexOf || function (item) {
			for (var i = 0, len = this.length; i < len; i++) {
			  if (i in this && this[i] === item) {
				return i;
			  }
			}
			return -1;
		  }
		  // Vendors: please allow content code to instantiate DOMExceptions
		  , DOMEx = function (type, message) {
			this.name = type;
			this.code = DOMException[type];
			this.message = message;
		  }
		  , checkTokenAndGetIndex = function (classList, token) {
			if (token === "") {
			  throw new DOMEx(
				  "SYNTAX_ERR"
				, "An invalid or illegal string was specified"
			  );
			}
			if (/\s/.test(token)) {
			  throw new DOMEx(
				  "INVALID_CHARACTER_ERR"
				, "String contains an invalid character"
			  );
			}
			return arrIndexOf.call(classList, token);
		  }
		  , ClassList = function (elem) {
			var
				trimmedClasses = strTrim.call(elem.className)
			  , classes = trimmedClasses ? trimmedClasses.split(/\s+/) : []
			;
			for (var i = 0, len = classes.length; i < len; i++) {
			  this.push(classes[i]);
			}
			this._updateClassName = function () {
			  elem.className = this.toString();
			};
		  }
		  , classListProto = ClassList[protoProp] = []
		  , classListGetter = function () {
			return new ClassList(this);
		  }
		;
		// Most DOMException implementations don't allow calling DOMException's toString()
		// on non-DOMExceptions. Error's toString() is sufficient here.
		DOMEx[protoProp] = Error[protoProp];
		classListProto.item = function (i) {
		  return this[i] || null;
		};
		classListProto.contains = function (token) {
		  token += "";
		  return checkTokenAndGetIndex(this, token) !== -1;
		};
		classListProto.add = function (token) {
		  token += "";
		  if (checkTokenAndGetIndex(this, token) === -1) {
			this.push(token);
			this._updateClassName();
		  }
		};
		classListProto.remove = function (token) {
		  token += "";
		  var index = checkTokenAndGetIndex(this, token);
		  if (index !== -1) {
			this.splice(index, 1);
			this._updateClassName();
		  }
		};
		classListProto.toggle = function (token) {
		  token += "";
		  if (checkTokenAndGetIndex(this, token) === -1) {
			this.add(token);
		  } else {
			this.remove(token);
		  }
		};
		classListProto.toString = function () {
		  return this.join(" ");
		};

		if (objCtr.defineProperty) {
		  var classListPropDesc = {
			  get: classListGetter
			, enumerable: true
			, configurable: true
		  };
		  try {
			objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
		  } catch (ex) { // IE 8 doesn't support enumerable:true
			if (ex.number === -0x7FF5EC54) {
			  classListPropDesc.enumerable = false;
			  objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
			}
		  }
		} else if (objCtr[protoProp].__defineGetter__) {
		  elemCtrProto.__defineGetter__(classListProp, classListGetter);
		}

		}(self));

		}
		/* ---------------------------------------------------------------------- */

		/* Slide movement */
		
		//function hideHelpText() {
		//  $('#help').hide();
		//};

		function getSlideEl(no) {
		  if ((no < 0) || (no >= slideEls.length)) {
			return null;
		  } else {
			return slideEls[no];
		  }
		};

		function updateSlideClass(slideNo, className) {
		  var el = getSlideEl(slideNo);

		  if (!el) {
			return;
		  }

		  if (className) {
			el.classList.add(className);
		  }

		  for (var i in SLIDE_CLASSES) {
			if (className != SLIDE_CLASSES[i]) {
			  el.classList.remove(SLIDE_CLASSES[i]);
			}
		  }
		};

		function updateSlides() {
		  if (window.trackPageview) window.trackPageview();

		  for (var i = 0; i < slideEls.length; i++) {
			switch (i) {
			  case curSlide - 2:
				updateSlideClass(i, 'far-past');
				break;
			  case curSlide - 1:
				updateSlideClass(i, 'past');
				break;
			  case curSlide:
				updateSlideClass(i, 'current');
				break;
			  case curSlide + 1:
				updateSlideClass(i, 'next');
				break;
			  case curSlide + 2:
				updateSlideClass(i, 'far-next');
				break;
			  default:
				updateSlideClass(i);
				break;
			}
		  }

		  triggerLeaveEvent(curSlide - 1);
		  triggerEnterEvent(curSlide);

		  window.setTimeout(function() {
			// Hide after the slide
			disableSlideFrames(curSlide - 2);
		  }, 301);

		  enableSlideFrames(curSlide - 1);
		  enableSlideFrames(curSlide + 2);

		  updateHash();
		};

		//added by ULAPPH
/* 		function soundSlides() {
		//make sound when slides moved
			if (urlParams["SOUND"] != "OFF") {
				soundManager.createSound({
					id: 'mySound',
					url: '/audio/click_x.wav'
				});
				soundManager.play('mySound');
			}
			return
		} */

		//added by ULAPPH
		function dispAds() {
		//show ads for every slide
			
			var ads_url = "";
			ads_url = '/rag?f=slides&d=' + urlParams["CATEGORY"] + '&n=' + 1;
			xmlhttp.open("GET",ads_url,true);
			xmlhttp.send();
			
			//get current counter
			 xmlhttp.onreadystatechange=function()
			  {
			  if (xmlhttp.readyState==4 && xmlhttp.status==200)
				{
				var currVal = xmlhttp.responseText;
				//alert(currVal);
					if (currVal != "") {
						alertify.set({ delay: 5000 });
						alertify.error(currVal, "", 0);
						return
					}
				return
				}
			 }
		}

		function prevSlide() {
		  //hideHelpText();
		  if (curSlide > 0) {
			curSlide--;

			updateSlides();
			//soundSlides();
		  }
		};

		function nextSlide() {
		  if (curSlide < slideEls.length - 1) {
			curSlide++;

			updateSlides();
			
			//soundSlides();
			
		  }
		  
		  if (curSlide == 1) {
			dispAds();
		  }
			
		  //added by ULAPPH
		  //check if valid ulapph user if half of content been browsed
		 if ((curSlide >= (slideEls.length/2)) && notValid == false) {
			var content_url = "";
			content_url = '/people?PEOPLE_FUNC=CHECK_USER&DOC_ID=' + urlParams["DOC_ID"] + '&SID=' + urlParams["SID"];
			xmlhttp.open("GET",content_url,true);
			xmlhttp.send();
			
			//get current counter
			 xmlhttp.onreadystatechange=function()
			  {
			  if (xmlhttp.readyState==4 && xmlhttp.status==200)
				{
				var currVal = xmlhttp.responseText;
				//alert(currVal);
					if (currVal == "NOT_ULAPPH_USER") {
						notValid = true;
					}
				return
				}
			 }
		 }
		 
		 if (curSlide >= ((slideEls.length/2) + 2) && notValid == true) {
			return
		  }
		};

		/* Slide events */

		function triggerEnterEvent(no) {
		  var el = getSlideEl(no);
		  if (!el) {
			return;
		  }

		  var onEnter = el.getAttribute('onslideenter');
		  if (onEnter) {
			new Function(onEnter).call(el);
		  }

		  var evt = document.createEvent('Event');
		  evt.initEvent('slideenter', true, true);
		  evt.slideNumber = no + 1; // Make it readable

		  el.dispatchEvent(evt);
		};

		function triggerLeaveEvent(no) {
		  var el = getSlideEl(no);
		  if (!el) {
			return;
		  }

		  var onLeave = el.getAttribute('onslideleave');
		  if (onLeave) {
			new Function(onLeave).call(el);
		  }

		  var evt = document.createEvent('Event');
		  evt.initEvent('slideleave', true, true);
		  evt.slideNumber = no + 1; // Make it readable

		  el.dispatchEvent(evt);
		};

		/* Touch events */

		function handleTouchStart(event) {
		  if (event.touches.length == 1) {
			touchDX = 0;
			touchDY = 0;

			touchStartX = event.touches[0].pageX;
			touchStartY = event.touches[0].pageY;

			document.body.addEventListener('touchmove', handleTouchMove, true);
			document.body.addEventListener('touchend', handleTouchEnd, true);
		  }
		};

		function handleTouchMove(event) {
		  if (event.touches.length > 1) {
			cancelTouch();
		  } else {
			touchDX = event.touches[0].pageX - touchStartX;
			touchDY = event.touches[0].pageY - touchStartY;
			event.preventDefault();
		  }
		};

		function handleTouchEnd(event) {
		  var dx = Math.abs(touchDX);
		  var dy = Math.abs(touchDY);

		  if ((dx > PM_TOUCH_SENSITIVITY) && (dy < (dx * 2 / 3))) {
			if (touchDX > 0) {
			  prevSlide();
			} else {
			  nextSlide();
			}
		  }

		  cancelTouch();
		};

		function cancelTouch() {
		  document.body.removeEventListener('touchmove', handleTouchMove, true);
		  document.body.removeEventListener('touchend', handleTouchEnd, true);
		};

		/* Preloading frames */

		function disableSlideFrames(no) {
		  var el = getSlideEl(no);
		  if (!el) {
			return;
		  }

		  var frames = el.getElementsByTagName('iframe');
		  for (var i = 0, frame; frame = frames[i]; i++) {
			disableFrame(frame);
		  }
		};

		function enableSlideFrames(no) {
		  var el = getSlideEl(no);
		  if (!el) {
			return;
		  }

		  var frames = el.getElementsByTagName('iframe');
		  for (var i = 0, frame; frame = frames[i]; i++) {
			enableFrame(frame);
		  }
		};

		function disableFrame(frame) {
		  frame.src = 'about:blank';
		};

		function enableFrame(frame) {
		  var src = frame._src;

		  if (frame.src != src && src != 'about:blank') {
			frame.src = src;
		  }
		};

		function setupFrames() {
		  var frames = document.querySelectorAll('iframe');
		  for (var i = 0, frame; frame = frames[i]; i++) {
			frame._src = frame.src;
			disableFrame(frame);
		  }

		  enableSlideFrames(curSlide);
		  enableSlideFrames(curSlide + 1);
		  enableSlideFrames(curSlide + 2);
		};

		function setupInteraction() {
		  /* Clicking and tapping */

		  var el = document.createElement('div');
		  el.className = 'slide-area';
		  el.id = 'prev-slide-area';
		  el.addEventListener('click', prevSlide, false);
		  document.querySelector('section.slides').appendChild(el);

		  var el = document.createElement('div');
		  el.className = 'slide-area';
		  el.id = 'next-slide-area';
		  el.addEventListener('click', nextSlide, false);
		  document.querySelector('section.slides').appendChild(el);

		  /* Swiping */

		  document.body.addEventListener('touchstart', handleTouchStart, false);
		}

		/* Hash functions */

		function getCurSlideFromHash() {
		  var slideNo = parseInt(location.hash.substr(1));

		  if (slideNo) {
			curSlide = slideNo - 1;
		  } else {
			curSlide = 0;
		  }

		};

		function updateHash() {
			location.replace('#' + (curSlide + 1));
			
			//added by ULAPPH
			//parse URL values
			var urlParams;
			var match,
					pl     = /\+/g,  // Regex for replacing addition symbol with a space
					search = /([^&=]+)=?([^&]*)/g,
					decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
					query  = window.location.search.substring(1);

			urlParams = {};
			while (match = search.exec(query))
			   urlParams[decode(match[1])] = decode(match[2]);
			
			var docTitle = document.getElementById("TITLE");
			
			if (urlParams["TITLE"] != "" && urlParams["TITLE"] != undefined) {
				document.title = '(' + (curSlide + 1) + '/' + slideEls.length + ') ' + urlParams["TITLE"];
			} 
			else 
			{

				if (docTitle.value != "" && docTitle.value != undefined) {
					//document.title = '(' + (curSlide + 1) + ') ' + urlParams["UID"];
					document.title = '(' + (curSlide + 1) + '/' + slideEls.length + ') ' + docTitle.value;
				} else {
					var url = window.location.pathname;
					var filename = url.substring(url.lastIndexOf('/')+1);
					//alert(filename);
					document.title = '(' + (curSlide + 1) + '/' + slideEls.length + ') ' + filename;
				}
			}
			
			//presenter?MODE=PRESENTER&UID=%s&TITLE=%v&BLOB_KEY=%v&PRESENTER_SESSION_KEY=%v
			if (urlParams["MODE"] == "PRESENTER") {
				var presenter_url = "";
				presenter_url = '/presenter?MODE=PRESENTER&TITLE=' + urlParams["TITLE"] + '&BLOB_KEY=' + urlParams["BLOB_KEY"] + '&PRESENTER_SESSION_KEY=' + urlParams["PRESENTER_SESSION_KEY"] + '&CATEGORY=' + urlParams["CATEGORY"] + '&PRESENTER_FUNC=UPDATE' + '&PRESENTER_VAL=' +  (curSlide + 1);
				xmlhttp.open("GET",presenter_url,true);
				xmlhttp.send();
				
				//display activity counter
				var presenter_url = "";
				presenter_url = '/presenter?MODE=VIEWER&PRESENTER_SESSION_KEY=' + urlParams["PRESENTER_SESSION_KEY"] + '&BLOB_KEY=' + urlParams["BLOB_KEY"] + '&CATEGORY=' + urlParams["CATEGORY"] + '&PRESENTER_FUNC=GET_COUNTER';
				xmlhttp.open("GET",presenter_url,true);
				xmlhttp.send();
				
				//get current counter
				 xmlhttp.onreadystatechange=function()
				  {
				  if (xmlhttp.readyState==4 && xmlhttp.status==200)
					{
					var currActivityValue = xmlhttp.responseText;
						if (currActivityValue != "") {
							alertify.set({ delay: 5000 });
							alertify.success("Act Ctr: " + currActivityValue, "", 0);
						}
					return
					}
				 }
			 
			}

		  
		};

		/* Event listeners */

		function handleBodyKeyDown(event) {
		  // If we're in a code element, only handle pgup/down.
		  var inCode = event.target.classList.contains("code");

		  switch (event.keyCode) {
			case 39: // right arrow
			case 32: // space
			case 13: // Enter
			  if (inCode) break;
			  
			case 34: // PgDn
			  nextSlide();
			  event.preventDefault();
			  break;

			case 37: // left arrow
			//case 8: // Backspace
			//  if (inCode) break;
			case 33: // PgUp
			  prevSlide();
			  event.preventDefault();
			  break;

			case 40: // down arrow
			  //if (inCode) break;
			  //nextSlide();
			  //event.preventDefault();
			  //break;
			  if (inCode) break;
			  pauseSlides();
			  event.preventDefault();
			  break;

			case 38: // up arrow
			  if (inCode) break;
			  prevSlide();
			  event.preventDefault();
			  break;
		  }
		};


		function pauseSlides() {
			
			var urlParams;
			var match,
					pl     = /\+/g,  // Regex for replacing addition symbol with a space
					search = /([^&=]+)=?([^&]*)/g,
					decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
					query  = window.location.search.substring(1);

			urlParams = {};
			while (match = search.exec(query))
			   urlParams[decode(match[1])] = decode(match[2]);
		   
			var slideNo = parseInt(location.hash.substr(1));
			var secsInt = parseInt(urlParams["SECS"]) * 1000;
			
			if (urlParams["SECS"] == "" || urlParams["SECS"] == undefined) {
				secsInt = 8 * 1000;
			}

			if (slideNo > 10000) {
				location.replace('#' + (slideNo - 10000));
				//alertify.set({ delay: 5000 });
				//alertify.error("Auto-play has been turned ON!", "", 0);
				alertify.set({ delay: 1000 });
				alertify.success("Auto-play ON!");
				setInterval(function(){moveSlides()}, secsInt);
			
			} else {
				location.replace('#' + (slideNo + 10000));
				//alertify.set({ delay: 5000 });
				//alertify.error("Auto-play has been turned OFF!", "", 0);
				alertify.set({ delay: 1000 });
				alertify.error("Auto-play OFF!");
			}
		}

		function moveSlides() {

			//parse URL values
			var urlParams;
			var match,
					pl     = /\+/g,  // Regex for replacing addition symbol with a space
					search = /([^&=]+)=?([^&]*)/g,
					decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
					query  = window.location.search.substring(1);

			urlParams = {};
			while (match = search.exec(query))
			   urlParams[decode(match[1])] = decode(match[2]);
				   
			//if not AUTO mode (non-TDS)
			var slideEls2 = document.querySelectorAll('section.slides > article');
			var slidesLEN = slideEls2.length;
			var slideNo = parseInt(location.hash.substr(1));
			if (slideNo == slidesLEN && urlParams["PARM"] != "AUTO" && urlParams["MODE"] != "PRESENTER") {
				//history.pushState(null,null,'#' + 1);
				//window.location.reload(false);
				window.location.assign('/website?q=GET_NEXT_CON' + '&SID=' + urlParams["SID"]);
				return;
			}
			
			if (slideNo < 10000) {

				if (urlParams["PARM"] != "AUTO" && urlParams["PARM"] != "NOLOOP") {
					currSlideValue = slideNo + 1;
						nextSlide();
				}
			}
		}

		function addEventListeners() {
		  document.addEventListener('keydown', handleBodyKeyDown, false);
		};

		/* Initialization */

		function addFontStyle() {
		  var el = document.createElement('link');
		  el.rel = 'stylesheet';
		  el.type = 'text/css';
		  el.href = '//fonts.googleapis.com/css?family=' +
					'Open+Sans:regular,semibold,italic,italicsemibold|Droid+Sans+Mono';

		  document.body.appendChild(el);
		};

		function addGeneralStyle() {
		  var el = document.createElement('link');
		  el.rel = 'stylesheet';
		  el.type = 'text/css';
		  //el.href = PERMANENT_URL_PREFIX + 'styles.css';
		  //el.href = 'css/' + 'styles.css';
		  document.body.appendChild(el);

		  var el = document.createElement('meta');
		  el.name = 'viewport';
		  el.content = 'width=1100,height=750';
		  document.querySelector('head').appendChild(el);

		  var el = document.createElement('meta');
		  el.name = 'apple-mobile-web-app-capable';
		  el.content = 'yes';
		  document.querySelector('head').appendChild(el);
		};

		function addPrintStyle() {
		  var el = document.createElement('link');
		  el.rel = 'stylesheet';
		  el.type = 'text/css';
		  el.media = "print";
		  //el.href = PERMANENT_URL_PREFIX + 'print.css';
		  el.href = 'css/' + 'print.css';
		  document.body.appendChild(el);
		};

		function handleDomLoaded() {
		  slideEls = document.querySelectorAll('section.slides > article');

		  setupFrames();

		  addFontStyle();
		  addGeneralStyle();
		  addPrintStyle();
		  addEventListeners();

		  updateSlides();

		  setupInteraction();

		  document.body.classList.add('loaded');
		};

		//added by ULAPPH
		function loadNowPresenting(){
			var presenter_url = "";
			var slideEls2 = document.querySelectorAll('section.slides > article');
			var slidesLEN = slideEls2.length;
			
			presenter_url = '/presenter?MODE=VIEWER&TITLE=' + urlParams["TITLE"] + '&SLEN=' + slidesLEN + '&BLOB_KEY=' + urlParams["BLOB_KEY"] + '&CATEGORY=' + urlParams["CATEGORY"] + '&PRESENTER_SESSION_KEY=' + urlParams["PRESENTER_SESSION_KEY"];
			xmlhttp.open("GET",presenter_url,true);
			xmlhttp.send();
			 xmlhttp.onreadystatechange=function()
			  {
			  if (xmlhttp.readyState==4 && xmlhttp.status==200)
				{
				var currSlideValue = xmlhttp.responseText;
					if (currSlideValue != "") {

						if (urlParams["MODE"] == "PRESENTER" && urlParams["PARM"] == "AUTO" ) {
						  var currSlideNum = parseInt(currSlideValue);
						  var slideNo = parseInt(location.hash.substr(1));
						  var slideDiff = currSlideNum - slideNo;		
						
						  if (slideDiff > 0) {
							for (i = 1; i <= slideDiff; i++) { 
								nextSlide();
							}
						  } else {
							slideDiff = slideDiff * -1;
							for (i = 1; i <= slideDiff; i++) { 
								prevSlide();
							}
						  }
				
						}
					}
				return
				}
			 }

		}

		//added by ULAPPH
		function loadNowPresentingSocial(){
			
			var social_url = "";
			var data_found = 0;
			social_url = '/social?SO_FUNC=GET_STAT&SID=' + urlParams["SID"] + '&TITLE=' + urlParams["TITLE"] + '&CATEGORY=' + urlParams["CATEGORY"];
			xmlhttp.open("GET",social_url,true);
			xmlhttp.send();

			 xmlhttp.onreadystatechange=function()
			  {
			  if (xmlhttp.readyState==4 && xmlhttp.status==200)
				{
				var currSocialStat = xmlhttp.responseText;
					var str = currSocialStat;
					var res = str.split(",");
					if (res.length == 6) {
						document.getElementById("numLikes").innerHTML = Humanize.intword(res[0], 'nopnopnopnop', 1);
						document.getElementById("numDisLikes").innerHTML = Humanize.intword(res[1], 'nopnopnopnop', 1);
						document.getElementById("numComments").innerHTML = Humanize.intword(res[2], 'nopnopnopnop', 1);
						document.getElementById("user-flag").src="/img/flags/" + res[3] + ".gif";
						document.getElementById("numOnline").innerHTML = Humanize.intword(res[4], 'nopnopnopnop', 1);
						document.getElementById("numOffline").innerHTML = Humanize.intword(res[5], 'nopnopnopnop', 1);
						data_found = 1;
					}
				}
				return
			 }
			 return
		}

		function initialize() {

			if (window.XMLHttpRequest)
			  {// code for IE7+, Firefox, Chrome, Opera, Safari
			  xmlhttp=new XMLHttpRequest();
			  }
			else
			  {// code for IE6, IE5
			  xmlhttp=new ActiveXObject("Microsoft.XMLHTTP");
			  }
			  
			//added by ULAPPH
			//parse URL values
			var match,
					pl     = /\+/g,  // Regex for replacing addition symbol with a space
					search = /([^&=]+)=?([^&]*)/g,
					decode = function (s) { return decodeURIComponent(s.replace(pl, " ")); },
					query  = window.location.search.substring(1);

			urlParams = {};
			while (match = search.exec(query))
			   urlParams[decode(match[1])] = decode(match[2]);

			if (urlParams["MODE"] == "PRESENTER" && urlParams["PARM"] == "AUTO") {
				setInterval(function(){loadNowPresenting()}, 5000);
			}
			
			if (urlParams["SID"] != "" && urlParams["SID"] != undefined){
					loadNowPresentingSocial();
					//loadNowSystemSocial();
			}
			
			
			
		  getCurSlideFromHash();

		  if (window['_DEBUG']) {
			PERMANENT_URL_PREFIX = '../';
		  }
		  
		  if (window['_DCL']) {
			handleDomLoaded();
		  } else {
			document.addEventListener('DOMContentLoaded', handleDomLoaded, false);
		  }
		 
		}

		// If ?debug exists then load the script relative instead of absolute
		if (!window['_DEBUG'] && document.location.href.indexOf('?debug') !== -1) {
		  document.addEventListener('DOMContentLoaded', function() {
			// Avoid missing the DomContentLoaded event
			window['_DCL'] = true
		  }, false);

		  window['_DEBUG'] = true;
		  var script = document.createElement('script');
		  script.type = 'text/javascript';
		  script.src = '/js/slides.js';
		  var s = document.getElementsByTagName('script')[0];
		  s.parentNode.insertBefore(script, s);

		  // Remove this script
		  s.parentNode.removeChild(s);
		} else {
		  initialize();
		}
	</script>
  </head>

  <body style='display: none'>
    <input type="hidden" id="slidetone" value="{{.SlideTone}}">
	<input type="hidden" id="mstat" value="auto">
    <section class='slides layout-widescreen'> 
      <article>
        <h1>{{.Title}}</h1>
		<input type="hidden" id="TITLE" value="{{.Title}}">
        {{with .Subtitle}}<h3>{{.}}</h3>{{end}}
        {{if not .Time.IsZero}}<h3>{{.Time.Format "2 January 2006"}}</h3>{{end}}
        {{range .Authors}}
          <div class="presenter">
            {{range .TextElem}}{{elem $.Template .}}{{end}}
          </div>
        {{end}}
      </article>
      
  {{range $i, $s := .Sections}}
  <!-- start of slide {{$s.Number}} -->
      <article>
      {{if $s.Elem}}
        <h3>{{$s.Title}}</h3>
        {{range $s.Elem}}{{elem $.Template .}}{{end}}
      {{else}}
        <h2>{{$s.Title}}</h2>
      {{end}}
      </article>
  <!-- end of slide {{$i}} -->
  {{end}}{{/* of Slide block */}}
 
	 {{if eq .DispLastPageOn "Y"}}
      <article>
        <h3>Thank you</h1>
        {{range .Authors}}
          <div class="presenter">
            {{range .Elem}}{{elem $.Template .}}{{end}}
          </div>
        {{end}}
		<br>
		<h3>About Us</h3>
		{{.AboutUs}}
		<h3>[ <a href="/infodb?DB_FUNC=VIEWER-SLIDES-ALL">Index</a> ] [ <a href="/uwm">UWM</a> ] [ <a href="/?q=home">Carousel</a> ]  [ <a href="/desktop0#page">Desktop0</a> ] [ <a href="/?q=home">Register</a> ] [ <a href="/logout">Logout</a> ] [ <a href="{{.Host}}uloc">ULOC</a> ]</h3>
		<p>
		<a href="https://ulapph-public-1.appspot.com/articles?TYPE=ARTICLE&DOC_ID=3&SID=TDSARTL-3"><img src="https://lh3.googleusercontent.com/OIRp0mGr7ua7nekr0aF3jRTjdjJOzfTNl4WPhm0sF47CudZD0rZqa9oFRLU1FT1Cpdh45WVbQNEL6rkvTM79Ebv34cjO54D9=s100"></a>
		<a href="https://golang.org/"><img src="/img/gopher.png" width=50 height=40></a><a href="https://cloud.google.com/"><img src="/img/google-cloud.png" width=50 height=50></a>
		<a href="{{.SocialLinkPlus}}" title="ULAPPH Google Plus" target="gcommunity"><img src="/img/icon-comm.png" height=50 width=50/></a> 
		<a href="{{.SocialLinkFB}}" title="ULAPPH Facebook" target="fcommunity"><img src="/img/facebook-icon.png" height=50 width=50/></a>
		<a href="{{.SocialLinkTwitter}}" title="ULAPPH Twitter" target="twitter"><img src="/img/twitter-icon.png" height=50 width=50/></a> 
		<a href="{{.SocialLinkLinkedIn}}" title="ULAPPH LinkedIn" target="linkedin"><img src="/img/linkedin-icon.png" height=50 width=50/></a> 
		<a href="{{.SocialLinkYoutube}}" title="ULAPPH Youtube" target="ycommunity"><img src="/img/Youtube.png" height=50 width=50/></a>
		<br>
		<hr>
		Host: {{.Host}}
		<br>
		SID: {{.SID}}
		<br>
		Tools: <a href="/presenter?TYPE=SLIDE&MODE=PRESENTER&PARM=AUTO&SECS=10&DOC_ID={{.DocID}}">Presenter</a>
		<br>
		Arrow keys: UP=Tools Menu; DOWN=AutoPlay On/Off; LEFT/RIGHT = Move slides
		<br>
		Version: {{.Build}}
      </article>
	  {{end}}
	  
    <div id="help">
      Use the left and right arrow keys or click the left and right
      edges of the page to navigate between slides.<br>
      (Press UP to display tools; or DOWN to pause/play; or ESC to display notes.)
    </div>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
	<script>
		$(function() {

		$(window).on('wheel', function(e) {

			var delta = e.originalEvent.deltaY;

			if (delta > 0) {
				nextSlide();
			} else {
				prevSlide();
			}

			return false; // this line is only added so the whole page won't scroll in the demo
		});
		});
	</script>	
  </body>
  {{if .PlayEnabled}}
  {{end}}
</html>
{{end}}

{{define "newline"}}
<br>
{{end}}
